{
  "contractName": "SwapExamples",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ISwapRouter",
          "name": "_swapRouter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "DAI",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USDC",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH9",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolFee",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapRouter",
      "outputs": [
        {
          "internalType": "contract ISwapRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "swapExactInputSingle",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountInMaximum",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "swapExactOutputSingle",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"_swapRouter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"DAI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolFee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"swapExactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"swapExactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"swapExactInputSingle(uint256,address)\":{\"details\":\"The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.\",\"params\":{\"amountIn\":\"The exact amount of DAI that will be swapped for WETH9.\"},\"returns\":{\"amountOut\":\"The amount of WETH9 received.\"}},\"swapExactOutputSingle(uint256,uint256,address)\":{\"details\":\"The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable, the calling address will need to approve for a slightly higher amount, anticipating some variance.\",\"params\":{\"amountInMaximum\":\"The amount of DAI we are willing to spend to receive the specified amount of WETH9.\",\"amountOut\":\"The exact amount of WETH9 to receive from the swap.\"},\"returns\":{\"amountIn\":\"The amount of DAI actually spent in the swap.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"swapExactInputSingle(uint256,address)\":{\"notice\":\"swapExactInputSingle swaps a fixed amount of DAI for a maximum possible amount of WETH9 using the DAI/WETH9 0.3% pool by calling `exactInputSingle` in the swap router.\"},\"swapExactOutputSingle(uint256,uint256,address)\":{\"notice\":\"swapExactOutputSingle swaps a minimum possible amount of DAI for a fixed amount of WETH.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/Lara/FER/Web3.0/challenge1/eth-dapp/truffle project/contracts/3_Swapper.sol\":\"SwapExamples\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/Lara/FER/Web3.0/challenge1/eth-dapp/truffle project/contracts/3_Swapper.sol\":{\"keccak256\":\"0x8b649228c0481a625e9c86c74e717c7ac695dc901e1a1e91b4aa5dce61ae008a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2e96b9fb632e5d5f467787c2f8e5943d5ed8b8b3ce7a4085b53bcb3df9901abb\",\"dweb:/ipfs/QmR7L1axbE1oyU7bs2rqe2bYo9ZYJ8s7WYKas1S8KDBKV6\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620012613803806200126183398181016040528101906200003791906200008c565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250505062000125565b60008151905062000086816200010b565b92915050565b600060208284031215620000a557620000a462000106565b5b6000620000b58482850162000075565b91505092915050565b6000620000cb82620000e6565b9050919050565b6000620000df82620000be565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200011681620000d2565b81146200012257600080fd5b50565b60805160601c6110fa62000167600039600081816101920152818161026b01528181610324015281816103950152818161046f015261053b01526110fa6000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063793ea8d11161005b578063793ea8d1146100ee57806389a302711461011e578063c31c9c071461013c578063e0bab4c41461015a5761007d565b8063089fe6aa1461008257806348946cee146100a05780634aa4a4fc146100d0575b600080fd5b61008a610178565b6040516100979190610e68565b60405180910390f35b6100ba60048036038101906100b59190610a7a565b61017e565b6040516100c79190610e83565b60405180910390f35b6100d8610369565b6040516100e59190610d3a565b60405180910390f35b61010860048036038101906101039190610a3a565b610381565b6040516101159190610e83565b60405180910390f35b610126610521565b6040516101339190610d3a565b60405180910390f35b610144610539565b6040516101519190610db5565b60405180910390f35b61016261055d565b60405161016f9190610d3a565b60405180910390f35b610bb881565b600061018c82333086610575565b6101b7827f0000000000000000000000000000000000000000000000000000000000000000856106cd565b60006040518061010001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200173c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff168152602001428152602001868152602001858152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663db3e2198826040518263ffffffff1660e01b81526004016102c29190610e4c565b602060405180830381600087803b1580156102dc57600080fd5b505af11580156102f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103149190610a0d565b9150838210156103615761034a837f000000000000000000000000000000000000000000000000000000000000000060006106cd565b6103608333848761035b9190610ec5565b610822565b5b509392505050565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b600061038f82333086610575565b6103ba827f0000000000000000000000000000000000000000000000000000000000000000856106cd565b60006040518061010001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200173c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200185815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b81526004016104c69190610e30565b602060405180830381600087803b1580156104e057600080fd5b505af11580156104f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105189190610a0d565b91505092915050565b73a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4881565b7f000000000000000000000000000000000000000000000000000000000000000081565b736b175474e89094c44da98b954eedeac495271d0f81565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b8686866040516024016105ac93929190610d55565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516106169190610d23565b6000604051808303816000865af19150503d8060008114610653576040519150601f19603f3d011682016040523d82523d6000602084013e610658565b606091505b5091509150818015610686575060008151148061068557508080602001905181019061068491906109e0565b5b5b6106c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106bc90610e10565b60405180910390fd5b505050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b8585604051602401610702929190610d8c565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161076c9190610d23565b6000604051808303816000865af19150503d80600081146107a9576040519150601f19603f3d011682016040523d82523d6000602084013e6107ae565b606091505b50915091508180156107dc57506000815114806107db5750808060200190518101906107da91906109e0565b5b5b61081b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081290610dd0565b60405180910390fd5b5050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b8585604051602401610857929190610d8c565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516108c19190610d23565b6000604051808303816000865af19150503d80600081146108fe576040519150601f19603f3d011682016040523d82523d6000602084013e610903565b606091505b5091509150818015610931575060008151148061093057508080602001905181019061092f91906109e0565b5b5b610970576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096790610df0565b60405180910390fd5b5050505050565b60008135905061098681611068565b92915050565b60008135905061099b8161107f565b92915050565b6000815190506109b081611096565b92915050565b6000813590506109c5816110ad565b92915050565b6000815190506109da816110ad565b92915050565b6000602082840312156109f6576109f5610fe8565b5b6000610a04848285016109a1565b91505092915050565b600060208284031215610a2357610a22610fe8565b5b6000610a31848285016109cb565b91505092915050565b60008060408385031215610a5157610a50610fe8565b5b6000610a5f858286016109b6565b9250506020610a7085828601610977565b9150509250929050565b600080600060608486031215610a9357610a92610fe8565b5b6000610aa1868287016109b6565b9350506020610ab2868287016109b6565b9250506040610ac38682870161098c565b9150509250925092565b610ad681610ef9565b82525050565b610ae581610ef9565b82525050565b6000610af682610e9e565b610b008185610ea9565b9350610b10818560208601610f86565b80840191505092915050565b610b2581610f62565b82525050565b6000610b38600283610eb4565b9150610b4382610fed565b602082019050919050565b6000610b5b600283610eb4565b9150610b6682611016565b602082019050919050565b6000610b7e600383610eb4565b9150610b898261103f565b602082019050919050565b61010082016000820151610bab6000850182610acd565b506020820151610bbe6020850182610acd565b506040820151610bd16040850182610ce7565b506060820151610be46060850182610acd565b506080820151610bf76080850182610d05565b5060a0820151610c0a60a0850182610d05565b5060c0820151610c1d60c0850182610d05565b5060e0820151610c3060e0850182610cd8565b50505050565b61010082016000820151610c4d6000850182610acd565b506020820151610c606020850182610acd565b506040820151610c736040850182610ce7565b506060820151610c866060850182610acd565b506080820151610c996080850182610d05565b5060a0820151610cac60a0850182610d05565b5060c0820151610cbf60c0850182610d05565b5060e0820151610cd260e0850182610cd8565b50505050565b610ce181610f29565b82525050565b610cf081610f49565b82525050565b610cff81610f49565b82525050565b610d0e81610f58565b82525050565b610d1d81610f58565b82525050565b6000610d2f8284610aeb565b915081905092915050565b6000602082019050610d4f6000830184610adc565b92915050565b6000606082019050610d6a6000830186610adc565b610d776020830185610adc565b610d846040830184610d14565b949350505050565b6000604082019050610da16000830185610adc565b610dae6020830184610d14565b9392505050565b6000602082019050610dca6000830184610b1c565b92915050565b60006020820190508181036000830152610de981610b2b565b9050919050565b60006020820190508181036000830152610e0981610b4e565b9050919050565b60006020820190508181036000830152610e2981610b71565b9050919050565b600061010082019050610e466000830184610b94565b92915050565b600061010082019050610e626000830184610c36565b92915050565b6000602082019050610e7d6000830184610cf6565b92915050565b6000602082019050610e986000830184610d14565b92915050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000610ed082610f58565b9150610edb83610f58565b925082821015610eee57610eed610fb9565b5b828203905092915050565b6000610f0482610f29565b9050919050565b6000610f1682610f29565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b6000819050919050565b6000610f6d82610f74565b9050919050565b6000610f7f82610f29565b9050919050565b60005b83811015610fa4578082015181840152602081019050610f89565b83811115610fb3576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f5341000000000000000000000000000000000000000000000000000000000000600082015250565b7f5354000000000000000000000000000000000000000000000000000000000000600082015250565b7f5354460000000000000000000000000000000000000000000000000000000000600082015250565b61107181610ef9565b811461107c57600080fd5b50565b61108881610f0b565b811461109357600080fd5b50565b61109f81610f1d565b81146110aa57600080fd5b50565b6110b681610f58565b81146110c157600080fd5b5056fea2646970667358221220ed985ec432e3109a821cdc4249869fe4630a54d5ee4406149dd2b9b33e71057e64736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c8063793ea8d11161005b578063793ea8d1146100ee57806389a302711461011e578063c31c9c071461013c578063e0bab4c41461015a5761007d565b8063089fe6aa1461008257806348946cee146100a05780634aa4a4fc146100d0575b600080fd5b61008a610178565b6040516100979190610e68565b60405180910390f35b6100ba60048036038101906100b59190610a7a565b61017e565b6040516100c79190610e83565b60405180910390f35b6100d8610369565b6040516100e59190610d3a565b60405180910390f35b61010860048036038101906101039190610a3a565b610381565b6040516101159190610e83565b60405180910390f35b610126610521565b6040516101339190610d3a565b60405180910390f35b610144610539565b6040516101519190610db5565b60405180910390f35b61016261055d565b60405161016f9190610d3a565b60405180910390f35b610bb881565b600061018c82333086610575565b6101b7827f0000000000000000000000000000000000000000000000000000000000000000856106cd565b60006040518061010001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200173c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff168152602001428152602001868152602001858152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663db3e2198826040518263ffffffff1660e01b81526004016102c29190610e4c565b602060405180830381600087803b1580156102dc57600080fd5b505af11580156102f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103149190610a0d565b9150838210156103615761034a837f000000000000000000000000000000000000000000000000000000000000000060006106cd565b6103608333848761035b9190610ec5565b610822565b5b509392505050565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b600061038f82333086610575565b6103ba827f0000000000000000000000000000000000000000000000000000000000000000856106cd565b60006040518061010001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200173c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200185815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b81526004016104c69190610e30565b602060405180830381600087803b1580156104e057600080fd5b505af11580156104f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105189190610a0d565b91505092915050565b73a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4881565b7f000000000000000000000000000000000000000000000000000000000000000081565b736b175474e89094c44da98b954eedeac495271d0f81565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b8686866040516024016105ac93929190610d55565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516106169190610d23565b6000604051808303816000865af19150503d8060008114610653576040519150601f19603f3d011682016040523d82523d6000602084013e610658565b606091505b5091509150818015610686575060008151148061068557508080602001905181019061068491906109e0565b5b5b6106c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106bc90610e10565b60405180910390fd5b505050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b8585604051602401610702929190610d8c565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161076c9190610d23565b6000604051808303816000865af19150503d80600081146107a9576040519150601f19603f3d011682016040523d82523d6000602084013e6107ae565b606091505b50915091508180156107dc57506000815114806107db5750808060200190518101906107da91906109e0565b5b5b61081b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081290610dd0565b60405180910390fd5b5050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b8585604051602401610857929190610d8c565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516108c19190610d23565b6000604051808303816000865af19150503d80600081146108fe576040519150601f19603f3d011682016040523d82523d6000602084013e610903565b606091505b5091509150818015610931575060008151148061093057508080602001905181019061092f91906109e0565b5b5b610970576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096790610df0565b60405180910390fd5b5050505050565b60008135905061098681611068565b92915050565b60008135905061099b8161107f565b92915050565b6000815190506109b081611096565b92915050565b6000813590506109c5816110ad565b92915050565b6000815190506109da816110ad565b92915050565b6000602082840312156109f6576109f5610fe8565b5b6000610a04848285016109a1565b91505092915050565b600060208284031215610a2357610a22610fe8565b5b6000610a31848285016109cb565b91505092915050565b60008060408385031215610a5157610a50610fe8565b5b6000610a5f858286016109b6565b9250506020610a7085828601610977565b9150509250929050565b600080600060608486031215610a9357610a92610fe8565b5b6000610aa1868287016109b6565b9350506020610ab2868287016109b6565b9250506040610ac38682870161098c565b9150509250925092565b610ad681610ef9565b82525050565b610ae581610ef9565b82525050565b6000610af682610e9e565b610b008185610ea9565b9350610b10818560208601610f86565b80840191505092915050565b610b2581610f62565b82525050565b6000610b38600283610eb4565b9150610b4382610fed565b602082019050919050565b6000610b5b600283610eb4565b9150610b6682611016565b602082019050919050565b6000610b7e600383610eb4565b9150610b898261103f565b602082019050919050565b61010082016000820151610bab6000850182610acd565b506020820151610bbe6020850182610acd565b506040820151610bd16040850182610ce7565b506060820151610be46060850182610acd565b506080820151610bf76080850182610d05565b5060a0820151610c0a60a0850182610d05565b5060c0820151610c1d60c0850182610d05565b5060e0820151610c3060e0850182610cd8565b50505050565b61010082016000820151610c4d6000850182610acd565b506020820151610c606020850182610acd565b506040820151610c736040850182610ce7565b506060820151610c866060850182610acd565b506080820151610c996080850182610d05565b5060a0820151610cac60a0850182610d05565b5060c0820151610cbf60c0850182610d05565b5060e0820151610cd260e0850182610cd8565b50505050565b610ce181610f29565b82525050565b610cf081610f49565b82525050565b610cff81610f49565b82525050565b610d0e81610f58565b82525050565b610d1d81610f58565b82525050565b6000610d2f8284610aeb565b915081905092915050565b6000602082019050610d4f6000830184610adc565b92915050565b6000606082019050610d6a6000830186610adc565b610d776020830185610adc565b610d846040830184610d14565b949350505050565b6000604082019050610da16000830185610adc565b610dae6020830184610d14565b9392505050565b6000602082019050610dca6000830184610b1c565b92915050565b60006020820190508181036000830152610de981610b2b565b9050919050565b60006020820190508181036000830152610e0981610b4e565b9050919050565b60006020820190508181036000830152610e2981610b71565b9050919050565b600061010082019050610e466000830184610b94565b92915050565b600061010082019050610e626000830184610c36565b92915050565b6000602082019050610e7d6000830184610cf6565b92915050565b6000602082019050610e986000830184610d14565b92915050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000610ed082610f58565b9150610edb83610f58565b925082821015610eee57610eed610fb9565b5b828203905092915050565b6000610f0482610f29565b9050919050565b6000610f1682610f29565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b6000819050919050565b6000610f6d82610f74565b9050919050565b6000610f7f82610f29565b9050919050565b60005b83811015610fa4578082015181840152602081019050610f89565b83811115610fb3576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f5341000000000000000000000000000000000000000000000000000000000000600082015250565b7f5354000000000000000000000000000000000000000000000000000000000000600082015250565b7f5354460000000000000000000000000000000000000000000000000000000000600082015250565b61107181610ef9565b811461107c57600080fd5b50565b61108881610f0b565b811461109357600080fd5b50565b61109f81610f1d565b81146110aa57600080fd5b50565b6110b681610f58565b81146110c157600080fd5b5056fea2646970667358221220ed985ec432e3109a821cdc4249869fe4630a54d5ee4406149dd2b9b33e71057e64736f6c63430008060033",
  "immutableReferences": {
    "361": [
      {
        "length": 32,
        "start": 402
      },
      {
        "length": 32,
        "start": 619
      },
      {
        "length": 32,
        "start": 804
      },
      {
        "length": 32,
        "start": 917
      },
      {
        "length": 32,
        "start": 1135
      },
      {
        "length": 32,
        "start": 1339
      }
    ]
  },
  "sourceMap": "231:4539:2:-:0;;;745:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;805:11;792:24;;;;;;;;;;;;745:78;231:4539;;7:183:21;84:5;115:6;109:13;100:22;;131:53;178:5;131:53;:::i;:::-;90:100;;;;:::o;196:391::-;286:6;335:2;323:9;314:7;310:23;306:32;303:2;;;341:79;;:::i;:::-;303:2;461:1;486:84;562:7;553:6;542:9;538:22;486:84;:::i;:::-;476:94;;432:148;293:294;;;;:::o;674:96::-;711:7;740:24;758:5;740:24;:::i;:::-;729:35;;719:51;;;:::o;776:116::-;833:7;862:24;880:5;862:24;:::i;:::-;851:35;;841:51;;;:::o;898:126::-;935:7;975:42;968:5;964:54;953:65;;943:81;;;:::o;1153:117::-;1262:1;1259;1252:12;1276:162;1369:44;1407:5;1369:44;:::i;:::-;1362:5;1359:55;1349:2;;1428:1;1425;1418:12;1349:2;1339:99;:::o;231:4539:2:-;;;;;;;;;;;;;",
  "deployedSourceMap": "231:4539:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;465:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3120:1648;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;586:74;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1293:1199;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;666:73;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;260:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;508:72;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;465:37;498:4;465:37;:::o;3120:1648::-;3237:16;3331:83;3363:6;3371:10;3391:4;3398:15;3331:31;:83::i;:::-;3640:72;3667:6;3683:10;3696:15;3640:26;:72::i;:::-;3723:49;3787:355;;;;;;;;3850:6;3787:355;;;;;;618:42;3787:355;;;;;;498:4;3787:355;;;;;;3948:10;3787:355;;;;;;3986:15;3787:355;;;;4030:9;3787:355;;;;4074:15;3787:355;;;;4126:1;3787:355;;;;;3723:419;;4266:10;:28;;;4295:6;4266:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4255:47;;4573:15;4562:8;:26;4558:204;;;4604:58;4631:6;4647:10;4660:1;4604:26;:58::i;:::-;4676:75;4704:6;4712:10;4742:8;4724:15;:26;;;;:::i;:::-;4676:27;:75::i;:::-;4558:204;3255:1513;3120:1648;;;;;:::o;586:74::-;618:42;586:74;:::o;1293:1199::-;1375:17;1520:76;1552:6;1560:10;1580:4;1587:8;1520:31;:76::i;:::-;1651:65;1678:6;1694:10;1707:8;1651:26;:65::i;:::-;1964:48;2027:339;;;;;;;;2089:6;2027:339;;;;;;618:42;2027:339;;;;;;498:4;2027:339;;;;;;2187:10;2027:339;;;;;;2225:15;2027:339;;;;2268:8;2027:339;;;;2312:1;2027:339;;;;2350:1;2027:339;;;;;1964:402;;2450:10;:27;;;2478:6;2450:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2438:47;;1394:1098;1293:1199;;;;:::o;666:73::-;697:42;666:73;:::o;260:39::-;;;:::o;508:72::-;538:42;508:72;:::o;561:358:20:-;701:12;715:17;748:5;:10;;782:28;;;812:4;818:2;822:5;759:69;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;748:81;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;700:129;;;;847:7;:57;;;;;874:1;859:4;:11;:16;:44;;;;890:4;879:24;;;;;;;;;;;;:::i;:::-;859:44;847:57;839:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;690:229;;561:358;;;;:::o;1873:307::-;1986:12;2000:17;2021:5;:10;;2055:23;;;2080:2;2084:5;2032:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2021:70;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1985:106;;;;2109:7;:57;;;;;2136:1;2121:4;:11;:16;:44;;;;2152:4;2141:24;;;;;;;;;;;;:::i;:::-;2121:44;2109:57;2101:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;1975:205;;1873:307;;;:::o;1211:309::-;1325:12;1339:17;1360:5;:10;;1394:24;;;1420:2;1424:5;1371:59;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1360:71;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1324:107;;;;1449:7;:57;;;;;1476:1;1461:4;:11;:16;:44;;;;1492:4;1481:24;;;;;;;;;;;;:::i;:::-;1461:44;1449:57;1441:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;1314:206;;1211:309;;;:::o;7:139:21:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:155::-;206:5;244:6;231:20;222:29;;260:41;295:5;260:41;:::i;:::-;212:95;;;;:::o;313:137::-;367:5;398:6;392:13;383:22;;414:30;438:5;414:30;:::i;:::-;373:77;;;;:::o;456:139::-;502:5;540:6;527:20;518:29;;556:33;583:5;556:33;:::i;:::-;508:87;;;;:::o;601:143::-;658:5;689:6;683:13;674:22;;705:33;732:5;705:33;:::i;:::-;664:80;;;;:::o;750:345::-;817:6;866:2;854:9;845:7;841:23;837:32;834:2;;;872:79;;:::i;:::-;834:2;992:1;1017:61;1070:7;1061:6;1050:9;1046:22;1017:61;:::i;:::-;1007:71;;963:125;824:271;;;;:::o;1101:351::-;1171:6;1220:2;1208:9;1199:7;1195:23;1191:32;1188:2;;;1226:79;;:::i;:::-;1188:2;1346:1;1371:64;1427:7;1418:6;1407:9;1403:22;1371:64;:::i;:::-;1361:74;;1317:128;1178:274;;;;:::o;1458:474::-;1526:6;1534;1583:2;1571:9;1562:7;1558:23;1554:32;1551:2;;;1589:79;;:::i;:::-;1551:2;1709:1;1734:53;1779:7;1770:6;1759:9;1755:22;1734:53;:::i;:::-;1724:63;;1680:117;1836:2;1862:53;1907:7;1898:6;1887:9;1883:22;1862:53;:::i;:::-;1852:63;;1807:118;1541:391;;;;;:::o;1938:635::-;2023:6;2031;2039;2088:2;2076:9;2067:7;2063:23;2059:32;2056:2;;;2094:79;;:::i;:::-;2056:2;2214:1;2239:53;2284:7;2275:6;2264:9;2260:22;2239:53;:::i;:::-;2229:63;;2185:117;2341:2;2367:53;2412:7;2403:6;2392:9;2388:22;2367:53;:::i;:::-;2357:63;;2312:118;2469:2;2495:61;2548:7;2539:6;2528:9;2524:22;2495:61;:::i;:::-;2485:71;;2440:126;2046:527;;;;;:::o;2579:108::-;2656:24;2674:5;2656:24;:::i;:::-;2651:3;2644:37;2634:53;;:::o;2693:118::-;2780:24;2798:5;2780:24;:::i;:::-;2775:3;2768:37;2758:53;;:::o;2817:373::-;2921:3;2949:38;2981:5;2949:38;:::i;:::-;3003:88;3084:6;3079:3;3003:88;:::i;:::-;2996:95;;3100:52;3145:6;3140:3;3133:4;3126:5;3122:16;3100:52;:::i;:::-;3177:6;3172:3;3168:16;3161:23;;2925:265;;;;;:::o;3196:171::-;3303:57;3354:5;3303:57;:::i;:::-;3298:3;3291:70;3281:86;;:::o;3373:365::-;3515:3;3536:66;3600:1;3595:3;3536:66;:::i;:::-;3529:73;;3611:93;3700:3;3611:93;:::i;:::-;3729:2;3724:3;3720:12;3713:19;;3519:219;;;:::o;3744:365::-;3886:3;3907:66;3971:1;3966:3;3907:66;:::i;:::-;3900:73;;3982:93;4071:3;3982:93;:::i;:::-;4100:2;4095:3;4091:12;4084:19;;3890:219;;;:::o;4115:365::-;4257:3;4278:66;4342:1;4337:3;4278:66;:::i;:::-;4271:73;;4353:93;4442:3;4353:93;:::i;:::-;4471:2;4466:3;4462:12;4455:19;;4261:219;;;:::o;4580:1625::-;4757:6;4752:3;4748:16;4849:4;4842:5;4838:16;4832:23;4868:63;4925:4;4920:3;4916:14;4902:12;4868:63;:::i;:::-;4774:167;5027:4;5020:5;5016:16;5010:23;5046:63;5103:4;5098:3;5094:14;5080:12;5046:63;:::i;:::-;4951:168;5200:4;5193:5;5189:16;5183:23;5219:61;5274:4;5269:3;5265:14;5251:12;5219:61;:::i;:::-;5129:161;5377:4;5370:5;5366:16;5360:23;5396:63;5453:4;5448:3;5444:14;5430:12;5396:63;:::i;:::-;5300:169;5555:4;5548:5;5544:16;5538:23;5574:63;5631:4;5626:3;5622:14;5608:12;5574:63;:::i;:::-;5479:168;5733:4;5726:5;5722:16;5716:23;5752:63;5809:4;5804:3;5800:14;5786:12;5752:63;:::i;:::-;5657:168;5919:4;5912:5;5908:16;5902:23;5938:63;5995:4;5990:3;5986:14;5972:12;5938:63;:::i;:::-;5835:176;6106:4;6099:5;6095:16;6089:23;6125:63;6182:4;6177:3;6173:14;6159:12;6125:63;:::i;:::-;6021:177;4726:1479;;;:::o;6307:1627::-;6486:6;6481:3;6477:16;6578:4;6571:5;6567:16;6561:23;6597:63;6654:4;6649:3;6645:14;6631:12;6597:63;:::i;:::-;6503:167;6756:4;6749:5;6745:16;6739:23;6775:63;6832:4;6827:3;6823:14;6809:12;6775:63;:::i;:::-;6680:168;6929:4;6922:5;6918:16;6912:23;6948:61;7003:4;6998:3;6994:14;6980:12;6948:61;:::i;:::-;6858:161;7106:4;7099:5;7095:16;7089:23;7125:63;7182:4;7177:3;7173:14;7159:12;7125:63;:::i;:::-;7029:169;7284:4;7277:5;7273:16;7267:23;7303:63;7360:4;7355:3;7351:14;7337:12;7303:63;:::i;:::-;7208:168;7463:4;7456:5;7452:16;7446:23;7482:63;7539:4;7534:3;7530:14;7516:12;7482:63;:::i;:::-;7386:169;7648:4;7641:5;7637:16;7631:23;7667:63;7724:4;7719:3;7715:14;7701:12;7667:63;:::i;:::-;7565:175;7835:4;7828:5;7824:16;7818:23;7854:63;7911:4;7906:3;7902:14;7888:12;7854:63;:::i;:::-;7750:177;6455:1479;;;:::o;7940:108::-;8017:24;8035:5;8017:24;:::i;:::-;8012:3;8005:37;7995:53;;:::o;8054:105::-;8129:23;8146:5;8129:23;:::i;:::-;8124:3;8117:36;8107:52;;:::o;8165:115::-;8250:23;8267:5;8250:23;:::i;:::-;8245:3;8238:36;8228:52;;:::o;8286:108::-;8363:24;8381:5;8363:24;:::i;:::-;8358:3;8351:37;8341:53;;:::o;8400:118::-;8487:24;8505:5;8487:24;:::i;:::-;8482:3;8475:37;8465:53;;:::o;8524:271::-;8654:3;8676:93;8765:3;8756:6;8676:93;:::i;:::-;8669:100;;8786:3;8779:10;;8658:137;;;;:::o;8801:222::-;8894:4;8932:2;8921:9;8917:18;8909:26;;8945:71;9013:1;9002:9;8998:17;8989:6;8945:71;:::i;:::-;8899:124;;;;:::o;9029:442::-;9178:4;9216:2;9205:9;9201:18;9193:26;;9229:71;9297:1;9286:9;9282:17;9273:6;9229:71;:::i;:::-;9310:72;9378:2;9367:9;9363:18;9354:6;9310:72;:::i;:::-;9392;9460:2;9449:9;9445:18;9436:6;9392:72;:::i;:::-;9183:288;;;;;;:::o;9477:332::-;9598:4;9636:2;9625:9;9621:18;9613:26;;9649:71;9717:1;9706:9;9702:17;9693:6;9649:71;:::i;:::-;9730:72;9798:2;9787:9;9783:18;9774:6;9730:72;:::i;:::-;9603:206;;;;;:::o;9815:262::-;9928:4;9966:2;9955:9;9951:18;9943:26;;9979:91;10067:1;10056:9;10052:17;10043:6;9979:91;:::i;:::-;9933:144;;;;:::o;10083:419::-;10249:4;10287:2;10276:9;10272:18;10264:26;;10336:9;10330:4;10326:20;10322:1;10311:9;10307:17;10300:47;10364:131;10490:4;10364:131;:::i;:::-;10356:139;;10254:248;;;:::o;10508:419::-;10674:4;10712:2;10701:9;10697:18;10689:26;;10761:9;10755:4;10751:20;10747:1;10736:9;10732:17;10725:47;10789:131;10915:4;10789:131;:::i;:::-;10781:139;;10679:248;;;:::o;10933:419::-;11099:4;11137:2;11126:9;11122:18;11114:26;;11186:9;11180:4;11176:20;11172:1;11161:9;11157:17;11150:47;11214:131;11340:4;11214:131;:::i;:::-;11206:139;;11104:248;;;:::o;11358:383::-;11531:4;11569:3;11558:9;11554:19;11546:27;;11583:151;11731:1;11720:9;11716:17;11707:6;11583:151;:::i;:::-;11536:205;;;;:::o;11747:387::-;11922:4;11960:3;11949:9;11945:19;11937:27;;11974:153;12124:1;12113:9;12109:17;12100:6;11974:153;:::i;:::-;11927:207;;;;:::o;12140:218::-;12231:4;12269:2;12258:9;12254:18;12246:26;;12282:69;12348:1;12337:9;12333:17;12324:6;12282:69;:::i;:::-;12236:122;;;;:::o;12364:222::-;12457:4;12495:2;12484:9;12480:18;12472:26;;12508:71;12576:1;12565:9;12561:17;12552:6;12508:71;:::i;:::-;12462:124;;;;:::o;12673:98::-;12724:6;12758:5;12752:12;12742:22;;12731:40;;;:::o;12777:147::-;12878:11;12915:3;12900:18;;12890:34;;;;:::o;12930:169::-;13014:11;13048:6;13043:3;13036:19;13088:4;13083:3;13079:14;13064:29;;13026:73;;;;:::o;13105:191::-;13145:4;13165:20;13183:1;13165:20;:::i;:::-;13160:25;;13199:20;13217:1;13199:20;:::i;:::-;13194:25;;13238:1;13235;13232:8;13229:2;;;13243:18;;:::i;:::-;13229:2;13288:1;13285;13281:9;13273:17;;13150:146;;;;:::o;13302:96::-;13339:7;13368:24;13386:5;13368:24;:::i;:::-;13357:35;;13347:51;;;:::o;13404:104::-;13449:7;13478:24;13496:5;13478:24;:::i;:::-;13467:35;;13457:51;;;:::o;13514:90::-;13548:7;13591:5;13584:13;13577:21;13566:32;;13556:48;;;:::o;13610:126::-;13647:7;13687:42;13680:5;13676:54;13665:65;;13655:81;;;:::o;13742:91::-;13778:7;13818:8;13811:5;13807:20;13796:31;;13786:47;;;:::o;13839:77::-;13876:7;13905:5;13894:16;;13884:32;;;:::o;13922:166::-;13992:9;14025:57;14076:5;14025:57;:::i;:::-;14012:70;;14002:86;;;:::o;14094:133::-;14164:9;14197:24;14215:5;14197:24;:::i;:::-;14184:37;;14174:53;;;:::o;14233:307::-;14301:1;14311:113;14325:6;14322:1;14319:13;14311:113;;;14410:1;14405:3;14401:11;14395:18;14391:1;14386:3;14382:11;14375:39;14347:2;14344:1;14340:10;14335:15;;14311:113;;;14442:6;14439:1;14436:13;14433:2;;;14522:1;14513:6;14508:3;14504:16;14497:27;14433:2;14282:258;;;;:::o;14546:180::-;14594:77;14591:1;14584:88;14691:4;14688:1;14681:15;14715:4;14712:1;14705:15;14855:117;14964:1;14961;14954:12;14978:152;15118:4;15114:1;15106:6;15102:14;15095:28;15084:46;:::o;15136:152::-;15276:4;15272:1;15264:6;15260:14;15253:28;15242:46;:::o;15294:153::-;15434:5;15430:1;15422:6;15418:14;15411:29;15400:47;:::o;15453:122::-;15526:24;15544:5;15526:24;:::i;:::-;15519:5;15516:35;15506:2;;15565:1;15562;15555:12;15506:2;15496:79;:::o;15581:138::-;15662:32;15688:5;15662:32;:::i;:::-;15655:5;15652:43;15642:2;;15709:1;15706;15699:12;15642:2;15632:87;:::o;15725:116::-;15795:21;15810:5;15795:21;:::i;:::-;15788:5;15785:32;15775:2;;15831:1;15828;15821:12;15775:2;15765:76;:::o;15847:122::-;15920:24;15938:5;15920:24;:::i;:::-;15913:5;15910:35;15900:2;;15959:1;15956;15949:12;15900:2;15890:79;:::o",
  "source": "pragma solidity ^0.8.6;\npragma abicoder v2;\n// SPDX-License-Identifier: GPL-2.0-or-later\n\nimport '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol';\nimport '@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol';\n\ncontract SwapExamples {\n\n    ISwapRouter public immutable swapRouter;\n\n    // This example swaps DAI/WETH9 for single path swaps and DAI/USDC/WETH9 for multi path swaps.\n\n    // For this example, we will set the pool fee to 0.3%.\n    uint24 public constant poolFee = 3000;\n    address public constant DAI = 0x6B175474E89094C44Da98b954EedeAC495271d0F;\n    address public constant WETH9 = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\n    address public constant USDC = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48;\n    constructor(ISwapRouter _swapRouter) {\n        swapRouter = _swapRouter;\n    }\n\n    /// @notice swapExactInputSingle swaps a fixed amount of DAI for a maximum possible amount of WETH9\n    /// using the DAI/WETH9 0.3% pool by calling `exactInputSingle` in the swap router.\n    /// @dev The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.\n    /// @param amountIn The exact amount of DAI that will be swapped for WETH9.\n    /// @return amountOut The amount of WETH9 received.\n    function swapExactInputSingle(uint256 amountIn, address _token) external returns (uint256 amountOut) {\n        // msg.sender must approve this contract\n\n        // Transfer the specified amount of DAI to this contract.\n        TransferHelper.safeTransferFrom(_token, msg.sender, address(this), amountIn);\n\n        // Approve the router to spend DAI.\n        TransferHelper.safeApprove(_token, address(swapRouter), amountIn);\n\n        // Naively set amountOutMinimum to 0. In production, use an oracle or other data source to choose a safer value for amountOutMinimum.\n        // We also set the sqrtPriceLimitx96 to be 0 to ensure we swap our exact input amount.\n        ISwapRouter.ExactInputSingleParams memory params =\n            ISwapRouter.ExactInputSingleParams({\n                tokenIn: _token,\n                tokenOut: WETH9,\n                fee: poolFee,\n                recipient: msg.sender,\n                deadline: block.timestamp,\n                amountIn: amountIn,\n                amountOutMinimum: 0,\n                sqrtPriceLimitX96: 0\n            });\n\n        // The call to `exactInputSingle` executes the swap.\n        amountOut = swapRouter.exactInputSingle(params);\n    }\n\n    /// @notice swapExactOutputSingle swaps a minimum possible amount of DAI for a fixed amount of WETH.\n    /// @dev The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable,\n    /// the calling address will need to approve for a slightly higher amount, anticipating some variance.\n    /// @param amountOut The exact amount of WETH9 to receive from the swap.\n    /// @param amountInMaximum The amount of DAI we are willing to spend to receive the specified amount of WETH9.\n    /// @return amountIn The amount of DAI actually spent in the swap.\n    function swapExactOutputSingle(uint256 amountOut, uint256 amountInMaximum, address payable _token) external returns (uint256 amountIn) {\n        // Transfer the specified amount of DAI to this contract.\n        TransferHelper.safeTransferFrom(_token, msg.sender, address(this), amountInMaximum);\n\n        // Approve the router to spend the specifed `amountInMaximum` of DAI.\n        // In production, you should choose the maximum amount to spend based on oracles or other data sources to acheive a better swap.\n        TransferHelper.safeApprove(_token, address(swapRouter), amountInMaximum);\n\n        ISwapRouter.ExactOutputSingleParams memory params =\n            ISwapRouter.ExactOutputSingleParams({\n                tokenIn: _token,\n                tokenOut: WETH9,\n                fee: poolFee,\n                recipient: msg.sender,\n                deadline: block.timestamp,\n                amountOut: amountOut,\n                amountInMaximum: amountInMaximum,\n                sqrtPriceLimitX96: 0\n            });\n\n        // Executes the swap returning the amountIn needed to spend to receive the desired amountOut.\n        amountIn = swapRouter.exactOutputSingle(params);\n\n        // For exact output swaps, the amountInMaximum may not have all been spent.\n        // If the actual amount spent (amountIn) is less than the specified maximum amount, we must refund the msg.sender and approve the swapRouter to spend 0.\n        if (amountIn < amountInMaximum) {\n            TransferHelper.safeApprove(_token, address(swapRouter), 0);\n            TransferHelper.safeTransfer(_token, msg.sender, amountInMaximum - amountIn);\n        }\n    }\n}",
  "sourcePath": "/Users/Lara/FER/Web3.0/challenge1/eth-dapp/truffle project/contracts/3_Swapper.sol",
  "ast": {
    "absolutePath": "/Users/Lara/FER/Web3.0/challenge1/eth-dapp/truffle project/contracts/3_Swapper.sol",
    "exportedSymbols": {
      "IERC20": [
        798
      ],
      "ISwapRouter": [
        2983
      ],
      "IUniswapV3SwapCallback": [
        2883
      ],
      "SwapExamples": [
        536
      ],
      "TransferHelper": [
        3154
      ]
    },
    "id": 537,
    "license": "GPL-2.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 355,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "id": 356,
        "literals": [
          "abicoder",
          "v2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:19:2"
      },
      {
        "absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "id": 357,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 537,
        "sourceUnit": 2984,
        "src": "90:68:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
        "file": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
        "id": 358,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 537,
        "sourceUnit": 3155,
        "src": "159:70:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 536,
        "linearizedBaseContracts": [
          536
        ],
        "name": "SwapExamples",
        "nameLocation": "240:12:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "c31c9c07",
            "id": 361,
            "mutability": "immutable",
            "name": "swapRouter",
            "nameLocation": "289:10:2",
            "nodeType": "VariableDeclaration",
            "scope": 536,
            "src": "260:39:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISwapRouter_$2983",
              "typeString": "contract ISwapRouter"
            },
            "typeName": {
              "id": 360,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 359,
                "name": "ISwapRouter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2983,
                "src": "260:11:2"
              },
              "referencedDeclaration": 2983,
              "src": "260:11:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISwapRouter_$2983",
                "typeString": "contract ISwapRouter"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "089fe6aa",
            "id": 364,
            "mutability": "constant",
            "name": "poolFee",
            "nameLocation": "488:7:2",
            "nodeType": "VariableDeclaration",
            "scope": 536,
            "src": "465:37:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint24",
              "typeString": "uint24"
            },
            "typeName": {
              "id": 362,
              "name": "uint24",
              "nodeType": "ElementaryTypeName",
              "src": "465:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint24",
                "typeString": "uint24"
              }
            },
            "value": {
              "hexValue": "33303030",
              "id": 363,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "498:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3000_by_1",
                "typeString": "int_const 3000"
              },
              "value": "3000"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "e0bab4c4",
            "id": 367,
            "mutability": "constant",
            "name": "DAI",
            "nameLocation": "532:3:2",
            "nodeType": "VariableDeclaration",
            "scope": 536,
            "src": "508:72:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 365,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "508:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307836423137353437344538393039344334344461393862393534456564654143343935323731643046",
              "id": 366,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "538:42:2",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x6B175474E89094C44Da98b954EedeAC495271d0F"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "4aa4a4fc",
            "id": 370,
            "mutability": "constant",
            "name": "WETH9",
            "nameLocation": "610:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 536,
            "src": "586:74:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 368,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "586:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307843303261614133396232323346453844304130653543344632376541443930383343373536436332",
              "id": 369,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "618:42:2",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "89a30271",
            "id": 373,
            "mutability": "constant",
            "name": "USDC",
            "nameLocation": "690:4:2",
            "nodeType": "VariableDeclaration",
            "scope": 536,
            "src": "666:73:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 371,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "666:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307841306238363939316336323138623336633164313944346132653945623063453336303665423438",
              "id": 372,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "697:42:2",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 383,
              "nodeType": "Block",
              "src": "782:41:2",
              "statements": [
                {
                  "expression": {
                    "id": 381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 379,
                      "name": "swapRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 361,
                      "src": "792:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISwapRouter_$2983",
                        "typeString": "contract ISwapRouter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 380,
                      "name": "_swapRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 376,
                      "src": "805:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISwapRouter_$2983",
                        "typeString": "contract ISwapRouter"
                      }
                    },
                    "src": "792:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISwapRouter_$2983",
                      "typeString": "contract ISwapRouter"
                    }
                  },
                  "id": 382,
                  "nodeType": "ExpressionStatement",
                  "src": "792:24:2"
                }
              ]
            },
            "id": 384,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 377,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 376,
                  "mutability": "mutable",
                  "name": "_swapRouter",
                  "nameLocation": "769:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 384,
                  "src": "757:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISwapRouter_$2983",
                    "typeString": "contract ISwapRouter"
                  },
                  "typeName": {
                    "id": 375,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 374,
                      "name": "ISwapRouter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2983,
                      "src": "757:11:2"
                    },
                    "referencedDeclaration": 2983,
                    "src": "757:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISwapRouter_$2983",
                      "typeString": "contract ISwapRouter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "756:25:2"
            },
            "returnParameters": {
              "id": 378,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "782:0:2"
            },
            "scope": 536,
            "src": "745:78:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 444,
              "nodeType": "Block",
              "src": "1394:1098:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 397,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 389,
                        "src": "1552:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 398,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1560:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1560:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 402,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1580:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SwapExamples_$536",
                              "typeString": "contract SwapExamples"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SwapExamples_$536",
                              "typeString": "contract SwapExamples"
                            }
                          ],
                          "id": 401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1572:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 400,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1572:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1572:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 404,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 387,
                        "src": "1587:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 394,
                        "name": "TransferHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3154,
                        "src": "1520:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TransferHelper_$3154_$",
                          "typeString": "type(library TransferHelper)"
                        }
                      },
                      "id": 396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3035,
                      "src": "1520:31:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1520:76:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 406,
                  "nodeType": "ExpressionStatement",
                  "src": "1520:76:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 410,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 389,
                        "src": "1678:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 413,
                            "name": "swapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 361,
                            "src": "1694:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISwapRouter_$2983",
                              "typeString": "contract ISwapRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISwapRouter_$2983",
                              "typeString": "contract ISwapRouter"
                            }
                          ],
                          "id": 412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1686:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 411,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1686:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1686:19:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 415,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 387,
                        "src": "1707:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 407,
                        "name": "TransferHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3154,
                        "src": "1651:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TransferHelper_$3154_$",
                          "typeString": "type(library TransferHelper)"
                        }
                      },
                      "id": 409,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3127,
                      "src": "1651:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1651:65:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 417,
                  "nodeType": "ExpressionStatement",
                  "src": "1651:65:2"
                },
                {
                  "assignments": [
                    422
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 422,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "2006:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 444,
                      "src": "1964:48:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExactInputSingleParams_$2907_memory_ptr",
                        "typeString": "struct ISwapRouter.ExactInputSingleParams"
                      },
                      "typeName": {
                        "id": 421,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 420,
                          "name": "ISwapRouter.ExactInputSingleParams",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2907,
                          "src": "1964:34:2"
                        },
                        "referencedDeclaration": 2907,
                        "src": "1964:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$2907_storage_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 436,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 425,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 389,
                        "src": "2089:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 426,
                        "name": "WETH9",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 370,
                        "src": "2123:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 427,
                        "name": "poolFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 364,
                        "src": "2151:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "expression": {
                          "id": 428,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2187:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2187:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 430,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "2225:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2225:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 432,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 387,
                        "src": "2268:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2312:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2350:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 423,
                        "name": "ISwapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2983,
                        "src": "2027:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$2983_$",
                          "typeString": "type(contract ISwapRouter)"
                        }
                      },
                      "id": 424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ExactInputSingleParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2907,
                      "src": "2027:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$2907_storage_ptr_$",
                        "typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
                      }
                    },
                    "id": 435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "tokenIn",
                      "tokenOut",
                      "fee",
                      "recipient",
                      "deadline",
                      "amountIn",
                      "amountOutMinimum",
                      "sqrtPriceLimitX96"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "2027:339:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExactInputSingleParams_$2907_memory_ptr",
                      "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1964:402:2"
                },
                {
                  "expression": {
                    "id": 442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 437,
                      "name": "amountOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 392,
                      "src": "2438:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 440,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 422,
                          "src": "2478:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExactInputSingleParams_$2907_memory_ptr",
                            "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_ExactInputSingleParams_$2907_memory_ptr",
                            "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                          }
                        ],
                        "expression": {
                          "id": 438,
                          "name": "swapRouter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 361,
                          "src": "2450:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISwapRouter_$2983",
                            "typeString": "contract ISwapRouter"
                          }
                        },
                        "id": 439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exactInputSingle",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2916,
                        "src": "2450:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$2907_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
                        }
                      },
                      "id": 441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2450:35:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2438:47:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 443,
                  "nodeType": "ExpressionStatement",
                  "src": "2438:47:2"
                }
              ]
            },
            "documentation": {
              "id": 385,
              "nodeType": "StructuredDocumentation",
              "src": "829:459:2",
              "text": "@notice swapExactInputSingle swaps a fixed amount of DAI for a maximum possible amount of WETH9\n using the DAI/WETH9 0.3% pool by calling `exactInputSingle` in the swap router.\n @dev The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.\n @param amountIn The exact amount of DAI that will be swapped for WETH9.\n @return amountOut The amount of WETH9 received."
            },
            "functionSelector": "793ea8d1",
            "id": 445,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapExactInputSingle",
            "nameLocation": "1302:20:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 387,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "1331:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 445,
                  "src": "1323:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 386,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1323:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 389,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1349:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 445,
                  "src": "1341:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 388,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1341:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1322:34:2"
            },
            "returnParameters": {
              "id": 393,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 392,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "1383:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 445,
                  "src": "1375:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 391,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1375:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1374:19:2"
            },
            "scope": 536,
            "src": "1293:1199:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 534,
              "nodeType": "Block",
              "src": "3255:1513:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 460,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 452,
                        "src": "3363:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 461,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3371:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3371:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 465,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3391:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SwapExamples_$536",
                              "typeString": "contract SwapExamples"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SwapExamples_$536",
                              "typeString": "contract SwapExamples"
                            }
                          ],
                          "id": 464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3383:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 463,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3383:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3383:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 467,
                        "name": "amountInMaximum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 450,
                        "src": "3398:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 457,
                        "name": "TransferHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3154,
                        "src": "3331:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TransferHelper_$3154_$",
                          "typeString": "type(library TransferHelper)"
                        }
                      },
                      "id": 459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3035,
                      "src": "3331:31:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3331:83:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 469,
                  "nodeType": "ExpressionStatement",
                  "src": "3331:83:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 473,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 452,
                        "src": "3667:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 476,
                            "name": "swapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 361,
                            "src": "3683:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISwapRouter_$2983",
                              "typeString": "contract ISwapRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISwapRouter_$2983",
                              "typeString": "contract ISwapRouter"
                            }
                          ],
                          "id": 475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3675:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 474,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3675:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3675:19:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 478,
                        "name": "amountInMaximum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 450,
                        "src": "3696:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 470,
                        "name": "TransferHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3154,
                        "src": "3640:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TransferHelper_$3154_$",
                          "typeString": "type(library TransferHelper)"
                        }
                      },
                      "id": 472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3127,
                      "src": "3640:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3640:72:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 480,
                  "nodeType": "ExpressionStatement",
                  "src": "3640:72:2"
                },
                {
                  "assignments": [
                    485
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 485,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "3766:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 534,
                      "src": "3723:49:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExactOutputSingleParams_$2953_memory_ptr",
                        "typeString": "struct ISwapRouter.ExactOutputSingleParams"
                      },
                      "typeName": {
                        "id": 484,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 483,
                          "name": "ISwapRouter.ExactOutputSingleParams",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2953,
                          "src": "3723:35:2"
                        },
                        "referencedDeclaration": 2953,
                        "src": "3723:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactOutputSingleParams_$2953_storage_ptr",
                          "typeString": "struct ISwapRouter.ExactOutputSingleParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 499,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 488,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 452,
                        "src": "3850:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 489,
                        "name": "WETH9",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 370,
                        "src": "3884:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 490,
                        "name": "poolFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 364,
                        "src": "3912:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "expression": {
                          "id": 491,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3948:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3948:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 493,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "3986:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3986:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 495,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 448,
                        "src": "4030:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 496,
                        "name": "amountInMaximum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 450,
                        "src": "4074:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4126:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 486,
                        "name": "ISwapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2983,
                        "src": "3787:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$2983_$",
                          "typeString": "type(contract ISwapRouter)"
                        }
                      },
                      "id": 487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ExactOutputSingleParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2953,
                      "src": "3787:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ExactOutputSingleParams_$2953_storage_ptr_$",
                        "typeString": "type(struct ISwapRouter.ExactOutputSingleParams storage pointer)"
                      }
                    },
                    "id": 498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "tokenIn",
                      "tokenOut",
                      "fee",
                      "recipient",
                      "deadline",
                      "amountOut",
                      "amountInMaximum",
                      "sqrtPriceLimitX96"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "3787:355:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExactOutputSingleParams_$2953_memory_ptr",
                      "typeString": "struct ISwapRouter.ExactOutputSingleParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3723:419:2"
                },
                {
                  "expression": {
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 500,
                      "name": "amountIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 455,
                      "src": "4255:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 503,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 485,
                          "src": "4295:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExactOutputSingleParams_$2953_memory_ptr",
                            "typeString": "struct ISwapRouter.ExactOutputSingleParams memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_ExactOutputSingleParams_$2953_memory_ptr",
                            "typeString": "struct ISwapRouter.ExactOutputSingleParams memory"
                          }
                        ],
                        "expression": {
                          "id": 501,
                          "name": "swapRouter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 361,
                          "src": "4266:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISwapRouter_$2983",
                            "typeString": "contract ISwapRouter"
                          }
                        },
                        "id": 502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exactOutputSingle",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2962,
                        "src": "4266:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_ExactOutputSingleParams_$2953_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (struct ISwapRouter.ExactOutputSingleParams memory) payable external returns (uint256)"
                        }
                      },
                      "id": 504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4266:36:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4255:47:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 506,
                  "nodeType": "ExpressionStatement",
                  "src": "4255:47:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 507,
                      "name": "amountIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 455,
                      "src": "4562:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 508,
                      "name": "amountInMaximum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 450,
                      "src": "4573:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4562:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 533,
                  "nodeType": "IfStatement",
                  "src": "4558:204:2",
                  "trueBody": {
                    "id": 532,
                    "nodeType": "Block",
                    "src": "4590:172:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 513,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 452,
                              "src": "4631:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 516,
                                  "name": "swapRouter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 361,
                                  "src": "4647:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISwapRouter_$2983",
                                    "typeString": "contract ISwapRouter"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ISwapRouter_$2983",
                                    "typeString": "contract ISwapRouter"
                                  }
                                ],
                                "id": 515,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4639:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 514,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4639:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 517,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4639:19:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 518,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4660:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 510,
                              "name": "TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3154,
                              "src": "4604:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TransferHelper_$3154_$",
                                "typeString": "type(library TransferHelper)"
                              }
                            },
                            "id": 512,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3127,
                            "src": "4604:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 519,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4604:58:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 520,
                        "nodeType": "ExpressionStatement",
                        "src": "4604:58:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 524,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 452,
                              "src": "4704:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "expression": {
                                "id": 525,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4712:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 526,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4712:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 529,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 527,
                                "name": "amountInMaximum",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 450,
                                "src": "4724:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 528,
                                "name": "amountIn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 455,
                                "src": "4742:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4724:26:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 521,
                              "name": "TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3154,
                              "src": "4676:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TransferHelper_$3154_$",
                                "typeString": "type(library TransferHelper)"
                              }
                            },
                            "id": 523,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3081,
                            "src": "4676:27:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4676:75:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 531,
                        "nodeType": "ExpressionStatement",
                        "src": "4676:75:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 446,
              "nodeType": "StructuredDocumentation",
              "src": "2498:617:2",
              "text": "@notice swapExactOutputSingle swaps a minimum possible amount of DAI for a fixed amount of WETH.\n @dev The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable,\n the calling address will need to approve for a slightly higher amount, anticipating some variance.\n @param amountOut The exact amount of WETH9 to receive from the swap.\n @param amountInMaximum The amount of DAI we are willing to spend to receive the specified amount of WETH9.\n @return amountIn The amount of DAI actually spent in the swap."
            },
            "functionSelector": "48946cee",
            "id": 535,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapExactOutputSingle",
            "nameLocation": "3129:21:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 448,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "3159:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 535,
                  "src": "3151:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 447,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3151:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 450,
                  "mutability": "mutable",
                  "name": "amountInMaximum",
                  "nameLocation": "3178:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 535,
                  "src": "3170:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 449,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3170:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 452,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "3211:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 535,
                  "src": "3195:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 451,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3195:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3150:68:2"
            },
            "returnParameters": {
              "id": 456,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 455,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "3245:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 535,
                  "src": "3237:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 454,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3237:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3236:18:2"
            },
            "scope": 536,
            "src": "3120:1648:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 537,
        "src": "231:4539:2",
        "usedErrors": []
      }
    ],
    "src": "0:4770:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/Lara/FER/Web3.0/challenge1/eth-dapp/truffle project/contracts/3_Swapper.sol",
    "exportedSymbols": {
      "IERC20": [
        798
      ],
      "ISwapRouter": [
        2983
      ],
      "IUniswapV3SwapCallback": [
        2883
      ],
      "SwapExamples": [
        536
      ],
      "TransferHelper": [
        3154
      ]
    },
    "id": 537,
    "license": "GPL-2.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 355,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "id": 356,
        "literals": [
          "abicoder",
          "v2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:19:2"
      },
      {
        "absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "id": 357,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 537,
        "sourceUnit": 2984,
        "src": "90:68:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
        "file": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
        "id": 358,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 537,
        "sourceUnit": 3155,
        "src": "159:70:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 536,
        "linearizedBaseContracts": [
          536
        ],
        "name": "SwapExamples",
        "nameLocation": "240:12:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "c31c9c07",
            "id": 361,
            "mutability": "immutable",
            "name": "swapRouter",
            "nameLocation": "289:10:2",
            "nodeType": "VariableDeclaration",
            "scope": 536,
            "src": "260:39:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISwapRouter_$2983",
              "typeString": "contract ISwapRouter"
            },
            "typeName": {
              "id": 360,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 359,
                "name": "ISwapRouter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2983,
                "src": "260:11:2"
              },
              "referencedDeclaration": 2983,
              "src": "260:11:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISwapRouter_$2983",
                "typeString": "contract ISwapRouter"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "089fe6aa",
            "id": 364,
            "mutability": "constant",
            "name": "poolFee",
            "nameLocation": "488:7:2",
            "nodeType": "VariableDeclaration",
            "scope": 536,
            "src": "465:37:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint24",
              "typeString": "uint24"
            },
            "typeName": {
              "id": 362,
              "name": "uint24",
              "nodeType": "ElementaryTypeName",
              "src": "465:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint24",
                "typeString": "uint24"
              }
            },
            "value": {
              "hexValue": "33303030",
              "id": 363,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "498:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3000_by_1",
                "typeString": "int_const 3000"
              },
              "value": "3000"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "e0bab4c4",
            "id": 367,
            "mutability": "constant",
            "name": "DAI",
            "nameLocation": "532:3:2",
            "nodeType": "VariableDeclaration",
            "scope": 536,
            "src": "508:72:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 365,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "508:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307836423137353437344538393039344334344461393862393534456564654143343935323731643046",
              "id": 366,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "538:42:2",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x6B175474E89094C44Da98b954EedeAC495271d0F"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "4aa4a4fc",
            "id": 370,
            "mutability": "constant",
            "name": "WETH9",
            "nameLocation": "610:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 536,
            "src": "586:74:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 368,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "586:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307843303261614133396232323346453844304130653543344632376541443930383343373536436332",
              "id": 369,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "618:42:2",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "89a30271",
            "id": 373,
            "mutability": "constant",
            "name": "USDC",
            "nameLocation": "690:4:2",
            "nodeType": "VariableDeclaration",
            "scope": 536,
            "src": "666:73:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 371,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "666:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307841306238363939316336323138623336633164313944346132653945623063453336303665423438",
              "id": 372,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "697:42:2",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 383,
              "nodeType": "Block",
              "src": "782:41:2",
              "statements": [
                {
                  "expression": {
                    "id": 381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 379,
                      "name": "swapRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 361,
                      "src": "792:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISwapRouter_$2983",
                        "typeString": "contract ISwapRouter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 380,
                      "name": "_swapRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 376,
                      "src": "805:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISwapRouter_$2983",
                        "typeString": "contract ISwapRouter"
                      }
                    },
                    "src": "792:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISwapRouter_$2983",
                      "typeString": "contract ISwapRouter"
                    }
                  },
                  "id": 382,
                  "nodeType": "ExpressionStatement",
                  "src": "792:24:2"
                }
              ]
            },
            "id": 384,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 377,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 376,
                  "mutability": "mutable",
                  "name": "_swapRouter",
                  "nameLocation": "769:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 384,
                  "src": "757:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISwapRouter_$2983",
                    "typeString": "contract ISwapRouter"
                  },
                  "typeName": {
                    "id": 375,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 374,
                      "name": "ISwapRouter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2983,
                      "src": "757:11:2"
                    },
                    "referencedDeclaration": 2983,
                    "src": "757:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISwapRouter_$2983",
                      "typeString": "contract ISwapRouter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "756:25:2"
            },
            "returnParameters": {
              "id": 378,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "782:0:2"
            },
            "scope": 536,
            "src": "745:78:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 444,
              "nodeType": "Block",
              "src": "1394:1098:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 397,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 389,
                        "src": "1552:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 398,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1560:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1560:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 402,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1580:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SwapExamples_$536",
                              "typeString": "contract SwapExamples"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SwapExamples_$536",
                              "typeString": "contract SwapExamples"
                            }
                          ],
                          "id": 401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1572:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 400,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1572:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1572:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 404,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 387,
                        "src": "1587:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 394,
                        "name": "TransferHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3154,
                        "src": "1520:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TransferHelper_$3154_$",
                          "typeString": "type(library TransferHelper)"
                        }
                      },
                      "id": 396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3035,
                      "src": "1520:31:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1520:76:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 406,
                  "nodeType": "ExpressionStatement",
                  "src": "1520:76:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 410,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 389,
                        "src": "1678:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 413,
                            "name": "swapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 361,
                            "src": "1694:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISwapRouter_$2983",
                              "typeString": "contract ISwapRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISwapRouter_$2983",
                              "typeString": "contract ISwapRouter"
                            }
                          ],
                          "id": 412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1686:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 411,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1686:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1686:19:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 415,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 387,
                        "src": "1707:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 407,
                        "name": "TransferHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3154,
                        "src": "1651:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TransferHelper_$3154_$",
                          "typeString": "type(library TransferHelper)"
                        }
                      },
                      "id": 409,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3127,
                      "src": "1651:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1651:65:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 417,
                  "nodeType": "ExpressionStatement",
                  "src": "1651:65:2"
                },
                {
                  "assignments": [
                    422
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 422,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "2006:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 444,
                      "src": "1964:48:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExactInputSingleParams_$2907_memory_ptr",
                        "typeString": "struct ISwapRouter.ExactInputSingleParams"
                      },
                      "typeName": {
                        "id": 421,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 420,
                          "name": "ISwapRouter.ExactInputSingleParams",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2907,
                          "src": "1964:34:2"
                        },
                        "referencedDeclaration": 2907,
                        "src": "1964:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$2907_storage_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 436,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 425,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 389,
                        "src": "2089:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 426,
                        "name": "WETH9",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 370,
                        "src": "2123:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 427,
                        "name": "poolFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 364,
                        "src": "2151:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "expression": {
                          "id": 428,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2187:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2187:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 430,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "2225:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2225:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 432,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 387,
                        "src": "2268:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2312:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2350:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 423,
                        "name": "ISwapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2983,
                        "src": "2027:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$2983_$",
                          "typeString": "type(contract ISwapRouter)"
                        }
                      },
                      "id": 424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ExactInputSingleParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2907,
                      "src": "2027:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$2907_storage_ptr_$",
                        "typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
                      }
                    },
                    "id": 435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "tokenIn",
                      "tokenOut",
                      "fee",
                      "recipient",
                      "deadline",
                      "amountIn",
                      "amountOutMinimum",
                      "sqrtPriceLimitX96"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "2027:339:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExactInputSingleParams_$2907_memory_ptr",
                      "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1964:402:2"
                },
                {
                  "expression": {
                    "id": 442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 437,
                      "name": "amountOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 392,
                      "src": "2438:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 440,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 422,
                          "src": "2478:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExactInputSingleParams_$2907_memory_ptr",
                            "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_ExactInputSingleParams_$2907_memory_ptr",
                            "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                          }
                        ],
                        "expression": {
                          "id": 438,
                          "name": "swapRouter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 361,
                          "src": "2450:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISwapRouter_$2983",
                            "typeString": "contract ISwapRouter"
                          }
                        },
                        "id": 439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exactInputSingle",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2916,
                        "src": "2450:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$2907_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
                        }
                      },
                      "id": 441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2450:35:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2438:47:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 443,
                  "nodeType": "ExpressionStatement",
                  "src": "2438:47:2"
                }
              ]
            },
            "documentation": {
              "id": 385,
              "nodeType": "StructuredDocumentation",
              "src": "829:459:2",
              "text": "@notice swapExactInputSingle swaps a fixed amount of DAI for a maximum possible amount of WETH9\n using the DAI/WETH9 0.3% pool by calling `exactInputSingle` in the swap router.\n @dev The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.\n @param amountIn The exact amount of DAI that will be swapped for WETH9.\n @return amountOut The amount of WETH9 received."
            },
            "functionSelector": "793ea8d1",
            "id": 445,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapExactInputSingle",
            "nameLocation": "1302:20:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 387,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "1331:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 445,
                  "src": "1323:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 386,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1323:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 389,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1349:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 445,
                  "src": "1341:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 388,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1341:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1322:34:2"
            },
            "returnParameters": {
              "id": 393,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 392,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "1383:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 445,
                  "src": "1375:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 391,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1375:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1374:19:2"
            },
            "scope": 536,
            "src": "1293:1199:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 534,
              "nodeType": "Block",
              "src": "3255:1513:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 460,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 452,
                        "src": "3363:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 461,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3371:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3371:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 465,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3391:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SwapExamples_$536",
                              "typeString": "contract SwapExamples"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SwapExamples_$536",
                              "typeString": "contract SwapExamples"
                            }
                          ],
                          "id": 464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3383:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 463,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3383:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3383:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 467,
                        "name": "amountInMaximum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 450,
                        "src": "3398:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 457,
                        "name": "TransferHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3154,
                        "src": "3331:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TransferHelper_$3154_$",
                          "typeString": "type(library TransferHelper)"
                        }
                      },
                      "id": 459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3035,
                      "src": "3331:31:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3331:83:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 469,
                  "nodeType": "ExpressionStatement",
                  "src": "3331:83:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 473,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 452,
                        "src": "3667:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 476,
                            "name": "swapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 361,
                            "src": "3683:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISwapRouter_$2983",
                              "typeString": "contract ISwapRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISwapRouter_$2983",
                              "typeString": "contract ISwapRouter"
                            }
                          ],
                          "id": 475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3675:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 474,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3675:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3675:19:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 478,
                        "name": "amountInMaximum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 450,
                        "src": "3696:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 470,
                        "name": "TransferHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3154,
                        "src": "3640:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TransferHelper_$3154_$",
                          "typeString": "type(library TransferHelper)"
                        }
                      },
                      "id": 472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3127,
                      "src": "3640:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3640:72:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 480,
                  "nodeType": "ExpressionStatement",
                  "src": "3640:72:2"
                },
                {
                  "assignments": [
                    485
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 485,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "3766:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 534,
                      "src": "3723:49:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExactOutputSingleParams_$2953_memory_ptr",
                        "typeString": "struct ISwapRouter.ExactOutputSingleParams"
                      },
                      "typeName": {
                        "id": 484,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 483,
                          "name": "ISwapRouter.ExactOutputSingleParams",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2953,
                          "src": "3723:35:2"
                        },
                        "referencedDeclaration": 2953,
                        "src": "3723:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactOutputSingleParams_$2953_storage_ptr",
                          "typeString": "struct ISwapRouter.ExactOutputSingleParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 499,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 488,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 452,
                        "src": "3850:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 489,
                        "name": "WETH9",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 370,
                        "src": "3884:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 490,
                        "name": "poolFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 364,
                        "src": "3912:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "expression": {
                          "id": 491,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3948:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3948:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 493,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "3986:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3986:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 495,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 448,
                        "src": "4030:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 496,
                        "name": "amountInMaximum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 450,
                        "src": "4074:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4126:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 486,
                        "name": "ISwapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2983,
                        "src": "3787:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$2983_$",
                          "typeString": "type(contract ISwapRouter)"
                        }
                      },
                      "id": 487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ExactOutputSingleParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2953,
                      "src": "3787:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ExactOutputSingleParams_$2953_storage_ptr_$",
                        "typeString": "type(struct ISwapRouter.ExactOutputSingleParams storage pointer)"
                      }
                    },
                    "id": 498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "tokenIn",
                      "tokenOut",
                      "fee",
                      "recipient",
                      "deadline",
                      "amountOut",
                      "amountInMaximum",
                      "sqrtPriceLimitX96"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "3787:355:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExactOutputSingleParams_$2953_memory_ptr",
                      "typeString": "struct ISwapRouter.ExactOutputSingleParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3723:419:2"
                },
                {
                  "expression": {
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 500,
                      "name": "amountIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 455,
                      "src": "4255:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 503,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 485,
                          "src": "4295:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExactOutputSingleParams_$2953_memory_ptr",
                            "typeString": "struct ISwapRouter.ExactOutputSingleParams memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_ExactOutputSingleParams_$2953_memory_ptr",
                            "typeString": "struct ISwapRouter.ExactOutputSingleParams memory"
                          }
                        ],
                        "expression": {
                          "id": 501,
                          "name": "swapRouter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 361,
                          "src": "4266:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISwapRouter_$2983",
                            "typeString": "contract ISwapRouter"
                          }
                        },
                        "id": 502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exactOutputSingle",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2962,
                        "src": "4266:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_ExactOutputSingleParams_$2953_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (struct ISwapRouter.ExactOutputSingleParams memory) payable external returns (uint256)"
                        }
                      },
                      "id": 504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4266:36:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4255:47:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 506,
                  "nodeType": "ExpressionStatement",
                  "src": "4255:47:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 507,
                      "name": "amountIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 455,
                      "src": "4562:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 508,
                      "name": "amountInMaximum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 450,
                      "src": "4573:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4562:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 533,
                  "nodeType": "IfStatement",
                  "src": "4558:204:2",
                  "trueBody": {
                    "id": 532,
                    "nodeType": "Block",
                    "src": "4590:172:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 513,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 452,
                              "src": "4631:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 516,
                                  "name": "swapRouter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 361,
                                  "src": "4647:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISwapRouter_$2983",
                                    "typeString": "contract ISwapRouter"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ISwapRouter_$2983",
                                    "typeString": "contract ISwapRouter"
                                  }
                                ],
                                "id": 515,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4639:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 514,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4639:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 517,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4639:19:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 518,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4660:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 510,
                              "name": "TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3154,
                              "src": "4604:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TransferHelper_$3154_$",
                                "typeString": "type(library TransferHelper)"
                              }
                            },
                            "id": 512,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3127,
                            "src": "4604:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 519,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4604:58:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 520,
                        "nodeType": "ExpressionStatement",
                        "src": "4604:58:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 524,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 452,
                              "src": "4704:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "expression": {
                                "id": 525,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4712:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 526,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4712:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 529,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 527,
                                "name": "amountInMaximum",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 450,
                                "src": "4724:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 528,
                                "name": "amountIn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 455,
                                "src": "4742:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4724:26:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 521,
                              "name": "TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3154,
                              "src": "4676:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TransferHelper_$3154_$",
                                "typeString": "type(library TransferHelper)"
                              }
                            },
                            "id": 523,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3081,
                            "src": "4676:27:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4676:75:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 531,
                        "nodeType": "ExpressionStatement",
                        "src": "4676:75:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 446,
              "nodeType": "StructuredDocumentation",
              "src": "2498:617:2",
              "text": "@notice swapExactOutputSingle swaps a minimum possible amount of DAI for a fixed amount of WETH.\n @dev The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable,\n the calling address will need to approve for a slightly higher amount, anticipating some variance.\n @param amountOut The exact amount of WETH9 to receive from the swap.\n @param amountInMaximum The amount of DAI we are willing to spend to receive the specified amount of WETH9.\n @return amountIn The amount of DAI actually spent in the swap."
            },
            "functionSelector": "48946cee",
            "id": 535,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapExactOutputSingle",
            "nameLocation": "3129:21:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 448,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "3159:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 535,
                  "src": "3151:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 447,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3151:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 450,
                  "mutability": "mutable",
                  "name": "amountInMaximum",
                  "nameLocation": "3178:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 535,
                  "src": "3170:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 449,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3170:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 452,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "3211:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 535,
                  "src": "3195:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 451,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3195:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3150:68:2"
            },
            "returnParameters": {
              "id": 456,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 455,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "3245:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 535,
                  "src": "3237:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 454,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3237:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3236:18:2"
            },
            "scope": 536,
            "src": "3120:1648:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 537,
        "src": "231:4539:2",
        "usedErrors": []
      }
    ],
    "src": "0:4770:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.6+commit.11564f7e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2021-08-05T17:35:53.875Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "swapExactInputSingle(uint256,address)": {
        "details": "The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.",
        "params": {
          "amountIn": "The exact amount of DAI that will be swapped for WETH9."
        },
        "returns": {
          "amountOut": "The amount of WETH9 received."
        }
      },
      "swapExactOutputSingle(uint256,uint256,address)": {
        "details": "The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable, the calling address will need to approve for a slightly higher amount, anticipating some variance.",
        "params": {
          "amountInMaximum": "The amount of DAI we are willing to spend to receive the specified amount of WETH9.",
          "amountOut": "The exact amount of WETH9 to receive from the swap."
        },
        "returns": {
          "amountIn": "The amount of DAI actually spent in the swap."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "swapExactInputSingle(uint256,address)": {
        "notice": "swapExactInputSingle swaps a fixed amount of DAI for a maximum possible amount of WETH9 using the DAI/WETH9 0.3% pool by calling `exactInputSingle` in the swap router."
      },
      "swapExactOutputSingle(uint256,uint256,address)": {
        "notice": "swapExactOutputSingle swaps a minimum possible amount of DAI for a fixed amount of WETH."
      }
    },
    "version": 1
  }
}